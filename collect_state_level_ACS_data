library(purrr)
library(tidycensus)
#Install tidycensus from Walkerke
  # remotes::install_github("walkerke/tidycensus")
library(dplyr)

#Census Key
#Input uniqu Census API census_api_key("58b15c83fa9e86e3f63d5e87ca80a381fd2e748d")
    # readRenviron("~/.Renviron")

#Load all 2019 ACS variable names, labels and descriptions
variables_2019 <- load_variables(2019, "acs5", cache = TRUE)

#Generate sexXgender targets for over 18 by age 
sexXgender18p_vars <-  c(
  whiteM1819 = "B01001A_007",
  whiteM2024 = "B01001A_008",
  whiteM2529 = "B01001A_009",
  whiteM3034 = "B01001A_010",
  whiteM3544 = "B01001A_011",
  whiteM4554 = "B01001A_012",
  whiteM5564 = "B01001A_013",
  whiteM6574 = "B01001A_014",
  whiteM7584 = "B01001A_015",
  whiteM85 = "B01001A_015",
  whiteF1819 = "B01001A_022",
  whiteF2024 = "B01001A_023",
  whiteF2529 = "B01001A_024",
  whiteF3034 = "B01001A_025",
  whiteF3544 = "B01001A_026",
  whiteF4554 = "B01001A_027",
  whiteF5564 = "B01001A_028",
  whiteF6574 = "B01001A_029",
  whiteF7584 = "B01001A_030",
  whiteF85 = "B01001A_031",
  blackM1819 = "B01001B_007",
  blackM2024 = "B01001B_008",
  blackM2529 = "B01001B_009",
  blackM3034 = "B01001B_010",
  blackM3544 = "B01001B_011",
  blackM4554 = "B01001B_012",
  blackM5564 = "B01001B_013",
  blackM6574 = "B01001B_014",
  blackM7584 = "B01001B_015",
  blackM85 = "B01001B_015",
  blackF1819 = "B01001B_022",
  blackF2024 = "B01001B_023",
  blackF2529 = "B01001B_024",
  blackF3034 = "B01001B_025",
  blackF3544 = "B01001B_026",
  blackF4554 = "B01001B_027",
  blackF5564 = "B01001B_028",
  blackF6574 = "B01001B_029",
  blackF7584 = "B01001B_030",
  blackF85 = "B01001B_031",
  indM1819 = "B01001C_007",
  indM2024 = "B01001C_008",
  indM2529 = "B01001C_009",
  indM3034 = "B01001C_010",
  indM3544 = "B01001C_011",
  indM4554 = "B01001C_012",
  indM5564 = "B01001C_013",
  indM6574 = "B01001C_014",
  indM7584 = "B01001C_015",
  indM85 = "B01001C_015",
  indF1819 = "B01001C_022",
  indF2024 = "B01001C_023",
  indF2529 = "B01001C_024",
  indF3034 = "B01001C_025",
  indF3544 = "B01001C_026",
  indF4554 = "B01001C_027",
  indF5564 = "B01001C_028",
  indF6574 = "B01001C_029",
  indF7584 = "B01001C_030",
  indF85 = "B01001C_031",
  asiM1819 = "B01001D_007",
  asiM2024 = "B01001D_008",
  asiM2529 = "B01001D_009",
  asiM3034 = "B01001D_010",
  asiM3544 = "B01001D_011",
  asiM4554 = "B01001D_012",
  asiM5564 = "B01001D_013",
  asiM6574 = "B01001D_014",
  asiM7584 = "B01001D_015",
  asiM85 = "B01001D_015",
  asiF1819 = "B01001D_022",
  asiF2024 = "B01001D_023",
  asiF2529 = "B01001D_024",
  asiF3034 = "B01001D_025",
  asiF3544 = "B01001D_026",
  asiF4554 = "B01001D_027",
  asiF5564 = "B01001D_028",
  asiF6574 = "B01001D_029",
  asiF7584 = "B01001D_030",
  asiF85 = "B01001D_031",
  natM1819 = "B01001E_007",
  natM2024 = "B01001E_008",
  natM2529 = "B01001E_009",
  natM3034 = "B01001E_010",
  natM3544 = "B01001E_011",
  natM4554 = "B01001E_012",
  natM5564 = "B01001E_013",
  natM6574 = "B01001E_014",
  natM7584 = "B01001E_015",
  natM85 = "B01001E_015",
  natF1819 = "B01001E_022",
  natF2024 = "B01001E_023",
  natF2529 = "B01001E_024",
  natF3034 = "B01001E_025",
  natF3544 = "B01001E_026",
  natF4554 = "B01001E_027",
  natF5564 = "B01001E_028",
  natF6574 = "B01001E_029",
  natF7584 = "B01001E_030",
  natF85 = "B01001E_031",
  othM1819 = "B01001F_007",
  othM2024 = "B01001F_008",
  othM2529 = "B01001F_009",
  othM3034 = "B01001F_010",
  othM3544 = "B01001F_011",
  othM4554 = "B01001F_012",
  othM5564 = "B01001F_013",
  othM6574 = "B01001F_014",
  othM7584 = "B01001F_015",
  othM85 = "B01001F_015",
  othF1819 = "B01001F_022",
  othF2024 = "B01001F_023",
  othF2529 = "B01001F_024",
  othF3034 = "B01001F_025",
  othF3544 = "B01001F_026",
  othF4554 = "B01001F_027",
  othF5564 = "B01001F_028",
  othF6574 = "B01001F_029",
  othF7584 = "B01001F_030",
  othF85 = "B01001F_031",
  twoM1819 = "B01001G_007",
  twoM2024 = "B01001G_008",
  twoM2529 = "B01001G_009",
  twoM3034 = "B01001G_010",
  twoM3544 = "B01001G_011",
  twoM4554 = "B01001G_012",
  twoM5564 = "B01001G_013",
  twoM6574 = "B01001G_014",
  twoM7584 = "B01001G_015",
  twoM85 = "B01001G_015",
  twoF1819 = "B01001G_022",
  twoF2024 = "B01001G_023",
  twoF2529 = "B01001G_024",
  twoF3034 = "B01001G_025",
  twoF3544 = "B01001G_026",
  twoF4554 = "B01001G_027",
  twoF5564 = "B01001G_028",
  twoF6574 = "B01001G_029",
  othF7584 = "B01001G_030",
  othF85 = "B01001G_031",
  hisM1819 = "B01001I_007",
  hisM2024 = "B01001I_008",
  hisM2529 = "B01001I_009",
  hisM3034 = "B01001I_010",
  hisM3544 = "B01001I_011",
  hisM4554 = "B01001I_012",
  hisM5564 = "B01001I_013",
  hisM6574 = "B01001I_014",
  hisM7584 = "B01001I_015",
  hisM85 = "B01001I_015",
  hisF1819 = "B01001I_022",
  hisF2024 = "B01001I_023",
  hisF2529 = "B01001I_024",
  hisF3034 = "B01001I_025",
  hisF3544 = "B01001I_026",
  hisF4554 = "B01001I_027",
  hisF5564 = "B01001I_028",
  hisF6574 = "B01001I_029",
  hisF7584 = "B01001I_030",
  hisF85 = "B01001I_031"
)


#Retrieve sexXrace data for those over 18 at state level
sexXrace18 <- map_dfr(
  my_states,
  ~ get_acs(
    geography = "state",
    variables = sexXgender18p_vars,
    state = us,
    summary_var = "B01003_001"
  )
)



#Genderate education by gender targets
edu_vars_gen <- c(
  Mnone = "B15002_003",
  M4 = "B15002_004",
  M6 = "B15002_005",
  M8 = "B15002_006",
  M9 = "B15002_007",
  M10 = "B15002_008",
  M11 = "B15002_009",
  M12 = "B15002_010",
  MHS = "B15002_011",
  MC1 = "B15002_012",
  MC2 = "B15002_013",
  MAss = "B15002_014",
  MBachelors = "B15002_015",
  MMasters = "B15002_016",
  MProf = "B15002_017",
  MDr = "B15002_018",
  Fnone = "B15002_020",
  F4 = "B15002_021",
  F6 = "B15002_022",
  F8 = "B15002_023",
  F9 = "B15002_024",
  F10 = "B15002_025",
  F11 = "B15002_026",
  F12 = "B15002_027",
  FHS = "B15002_028",
  FC1 = "B15002_029",
  FC2 = "B15002_030",
  FAss = "B15002_031",
  FBachelors = "B15002_032",
  FMasters = "B15002_033",
  FProf = "B15002_034",
  FDr = "B15002_035"
)

#Retrieve eduXgender data at the state level
eduXgender <- get_acs(
  geography = "state",
  variables = edu_vars_gen,
  summary_var = "B09021_001"
)


#Generate targets for Household Income
hhi_vars <- c(
  L10k = "B19001_002", #L for less than
  L15 = "B19001_003",
  L20 = "B19001_004",
  L25 = "B19001_005",
  L30 = "B19001_006",
  L35 = "B19001_007",
  L40 = "B19001_008",
  L45 = "B19001_009",
  L50 = "B19001_010",
  L60 = "B19001_011",
  L75 = "B19001_012",
  L100 = "B19001_013",
  L125 = "B19001_014",
  L150 = "B19001_015",
  L200 = "B19001_016",
  O200 = "B19001_017" #O for over
)

#Retrieve household income data at state level
hhi <- get_acs(
  geography = "state",
  variables = hhi_vars,
  summary_var = "B09021_001"
)

#Generate employment targets
empl_vars <- c(
  employedCiv = "B23025_004",
  UnemployedCiv = "B23025_005",
  military = "B23025_006",
  notinlf = "B23025_007",
  maleinschool = "B14002_003",
  femaleinschool = "B14002_027"
)

#Retrieve Employment data 
employment <- get_acs(
  geography = "state",
  variables = empl_vars,
  summary_var = "B09021_001"
)
